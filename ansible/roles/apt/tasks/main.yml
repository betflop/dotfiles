---
- name: Update apt cache
  become: yes
  ansible.builtin.apt:
    update_cache: yes

- name: Install git, curl, ssh-askpass, lua5.3, xclip, python3-dev, python3-pip, fzf, ripgrep
  become: yes
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - git
    - curl
    - ssh-askpass
    - lua5.3
    - xclip
    - python3-dev
    - python3-pip
    - fzf
    - ripgrep
    - direnv
    - bat
    - mc
    - htop

  
- name: Ensure directory for bin exists
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.local/bin"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
    
- name: Create symbolic link from /usr/bin/batcat to ~/.local/bin/bat
  ansible.builtin.file:
    src: /usr/bin/batcat
    dest: "/home/{{ ansible_user }}/.local/bin/bat"
    state: link

- name: Get the latest lazygit version
  ansible.builtin.shell: |
    curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*'
  register: lazygit_version

- name: Set lazygit version fact
  set_fact:
    lazygit_version: "{{ lazygit_version.stdout }}"

- name: Download lazygit
  ansible.builtin.get_url:
    url: "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_{{ lazygit_version }}_Linux_x86_64.tar.gz"
    dest: "/tmp/lazygit.tar.gz"

- name: Extract lazygit
  ansible.builtin.unarchive:
    src: "/tmp/lazygit.tar.gz"
    dest: "/tmp"
    remote_src: yes

- name: Install lazygit
  become: yes
  ansible.builtin.command:
    cmd: "install /tmp/lazygit /usr/local/bin"
    creates: "/usr/local/bin/lazygit"

- name: Clean up
  ansible.builtin.file:
    path: "/tmp/lazygit.tar.gz"
    state: absent

- name: Install zoxide
  ansible.builtin.shell: |
    curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash

- name: Ensure directory for Powerlevel10k exists
  ansible.builtin.file:
    path: "/home/{{ ansible_user}}/dracula-theme"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"

- name: Clone Dracula theme repository
  ansible.builtin.git:
    repo: https://github.com/dracula/midnight-commander.git
    dest: "/home/{{ ansible_user}}/dracula-theme"
    update: yes
  tags: apt

- name: Create directory for mc skins
  ansible.builtin.file:
    path: "/home/{{ ansible_user}}/.local/share/mc/skins"
    state: directory
    mode: '0755'
  tags: apt

- name: Create symbolic links for Dracula theme
  tags: apt
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop:
    - { src: "/home/{{ ansible_user}}/dracula-theme/skins/dracula.ini", dest: "/home/{{ ansible_user}}/.local/share/mc/skins/dracula.ini" }
    - { src: "/home/{{ ansible_user}}/dracula-theme/skins/dracula256.ini", dest: "/home/{{ ansible_user}}/.local/share/mc/skins/dracula256.ini" }

- name: Replace skin setting in Midnight Commander configuration
  ansible.builtin.lineinfile:
    path: "/home/{{ ansible_user}}/.config/mc/ini"
    regexp: '^skin='  # Найти строку, начинающуюся с 'skin='
    line: 'skin=dracula256'  # Заменить найденную строку на 'skin=dracula'

- name: Download exa binary zip
  ansible.builtin.get_url:
    url: https://github.com/ogham/exa/releases/download/v0.9.0/exa-linux-x86_64-0.9.0.zip
    dest: /tmp/exa-linux-x86_64-0.9.0.zip
    mode: '0644'
    force: yes

- name: Unzip exa binary
  ansible.builtin.unarchive:
    src: /tmp/exa-linux-x86_64-0.9.0.zip
    dest: /tmp
    remote_src: yes

- name: Move exa binary to /usr/local/bin
  ansible.builtin.command:
    cmd: mv /tmp/exa-linux-x86_64 /usr/local/bin/exa
  args:
    creates: /usr/local/bin/exa
  become: yes

- name: Set executable permissions for exa
  ansible.builtin.file:
    path: /usr/local/bin/exa
    mode: '0755'
  become: yes

- name: Remove unnecessary files
  ansible.builtin.file:
    path: /tmp/exa-linux-x86_64-0.9.0.zip
    state: absent
