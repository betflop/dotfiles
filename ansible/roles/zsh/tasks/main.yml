---
- name: Install Zsh
  apt:
    name: zsh
    state: present
  tags: zsh

- name: Change default shell to zsh for the current user
  user:
    name: "{{ ansible_user }}"
    shell: /usr/bin/zsh
  tags: zsh

- name: Copy ZSHRC configuration
  copy:
    src: "/home/{{ ansible_user }}/dotfiles/.zshrc"
    dest: "/home/{{ ansible_user }}/.zshrc"
    owner: "{{ ansible_user }}"
    mode: '0644'

- name: Install required packages
  ansible.builtin.apt:
    name: 
      - fonts-powerline
      - unzip
      - python3-pip
      - fontconfig
      - fonts-powerline
    state: present

- name: Install Oh My Zsh
  git:
    repo: 'https://github.com/ohmyzsh/ohmyzsh.git'
    dest: "/home/{{ ansible_user }}/.oh-my-zsh"
  tags: zsh

- name: Install powerline-status using pip
  ansible.builtin.command:
      cmd: pip3 install powerline-status --break-system-packages

- name: Ensure the .fonts directory exists in the user's home directory
  ansible.builtin.file:
      path: /home/{{ ansible_user }}/.fonts
      state: directory
      mode: '0755'
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
  become: false

- name: Copy custom fonts to the .fonts directory
  ansible.builtin.copy:
      src: "/home/{{ ansible_user }}/dotfiles/fonts"
      dest: /home/{{ ansible_user }}/.fonts/
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: '0644'
      remote_src: yes
  become: true

- name: Update font cache
  ansible.builtin.command:
    cmd: fc-cache -fv

- name: Clone fzf-zsh-plugin
  git:
    repo: 'https://github.com/unixorn/fzf-zsh-plugin.git'
    dest: "/home/{{ ansible_user }}/.oh-my-zsh/custom/plugins/fzf-zsh-plugin"
    force: yes
  tags: zsh

- name: Clone zsh-syntax-highlighting
  git:
    repo: 'https://github.com/zsh-users/zsh-syntax-highlighting.git'
    dest: "/home/{{ ansible_user }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
  tags: zsh

- name: Ensure directory for Powerlevel10k exists
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/powerlevel10k"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"

- name: Clone Powerlevel10k repository
  git:
    repo: 'https://github.com/romkatv/powerlevel10k.git'
    dest: '/home/{{ ansible_user }}/powerlevel10k'

- name: Copy Powerlevel10k configuration
  copy:
    src: "/home/{{ ansible_user }}/dotfiles/.p10k.zsh"
    dest: "/home/{{ ansible_user }}/.p10k.zsh"
    owner: "{{ ansible_user }}"
    mode: '0644'

- name: Ensure zsh-z plugin is installed
  ansible.builtin.git:
    repo: https://github.com/agkozak/zsh-z
    dest: "/home/{{ ansible_user }}/.oh-my-zsh/custom/plugins/zsh-z"
    version: master
  become: yes

- name: Ensure zsh-autosuggestions plugin is installed
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-autosuggestions
    dest: "/home/{{ ansible_user }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
    version: master
  become: yes

- name: Ensure git plugin is installed
  ansible.builtin.git:
    repo: https://github.com/ohmyzsh/ohmyzsh.git
    dest: "/home/{{ ansible_user }}/.oh-my-zsh/custom/plugins/git"
    version: master
  become: yes
  
- name: Clone fzf repository
  ansible.builtin.git:
      repo: 'https://github.com/junegunn/fzf.git'
      dest: '/home/{{ ansible_user }}/.fzf'
      version: 'master'
      force: yes

- name: Run fzf install script
  ansible.builtin.command: /home/{{ ansible_user }}/.fzf/install --all

- name: Set FZF_PATH variable in fzf-settings.zsh
  ansible.builtin.lineinfile:
      path: /home/{{ ansible_user }}/.oh-my-zsh/custom/plugins/fzf-zsh-plugin/fzf-settings.zsh
      insertbefore: BOF
      regexp: '^FZF_PATH='
      line: 'FZF_PATH="/home/{{ ansible_user }}/.fzf"'
      state: present
  
- name: Remove --highlight-line from all files in /home/pk/.fzf/shell/
  ansible.builtin.replace:
    path: /home/{{ ansible_user }}/.fzf/shell/key-bindings.zsh
    regexp: '--highlight-line'
    replace: ''
    backup: yes

- name: Change default shell to Zsh for user
  user:
    name: "{{ ansible_user }}"
    shell: /bin/zsh
